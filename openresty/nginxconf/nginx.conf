events { }

error_log /usr/local/openresty/nginx/logs/error.log info;

http {
	# Limit the number of requests per second to 10 requests/second
	limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

	# For limiting number of client connections from the same IP
	# Define a key/value area named "clientips" with a size of 10Mb
	limit_conn_zone $binary_remote_addr zone=clientips:10m;

	client_body_buffer_size 128k;
	client_max_body_size 128k;

	server {
		listen 8080;
		listen [::]:8080;

		server_name 
					127.0.0.1
					81.0.1.192
					blockchain2.com
					_
					;

		return 301 https://$host:8443$request_uri;
	}

	server {
		# This is a standard web server for serving HTML content
		listen 8443 ssl default_server;
		listen [::]:8443 ssl default_server;
		include /usr/local/openresty/nginx/conf/snippets/self-signed.conf;
		include /usr/local/openresty/nginx/conf/snippets/ssl-params.conf;

		# For serving the static content from the nginx web server)
		root /usr/local/openresty/nginx/html;
		index index.html index.htm;

		server_name 
					127.0.0.1
					81.0.1.192
					blockchain2.com
					_
					;

		client_body_timeout 10s;
		client_header_timeout 10s;

		location /lua_content {
			# MIME type determined by default_type:
			default_type 'text/plain';

			content_by_lua_block {
				ngx.say('Hello,world!')
			}
		}

		location = /request_body {

			content_by_lua_block {
				ngx.req.read_body()  -- explicitly read the req body
				local data = ngx.req.get_body_data()
				if data then
					ngx.say("body data:")
					ngx.print(data)
					return
				end

				-- body may get buffered in a temp file:
				local file = ngx.req.get_body_file()
				if file then
					ngx.say("body is in file ", file)
				else
					ngx.say("no body found")
				end
			}
		}

		location / {

			auth_basic "closed site";
			auth_basic_user_file /usr/local/openresty/nginx/conf/passwords;

			# Limit request rate to 10/s with a burst of 30
			limit_req zone=one burst=30 nodelay;

			# Limit to max 10 connections coming from the same IP
			limit_conn clientips 10;

			# Whitelist/Blacklist
	#		include ./conf.d/whitelist;
	#		deny all;


			# First attempt to serve request as file, then as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;


		}
	}
}